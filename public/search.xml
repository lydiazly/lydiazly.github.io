<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Python 安装和配置</title>
    <url>/2018/installpy/</url>
    <content><![CDATA[<p><a href="/downloads/notebooks/installpy.zip"><i class="fas fa-download"></i> Jupyter Notebook</a></p>
<p><small><font color=gray>[Update 2022-07-12] Some outputs are updated with python 3.10.</font></small></p>
<span id="more"></span>

<h2 id="安装-python"><a href="#安装-python" class="headerlink" title="安装 python"></a>安装 python</h2><hr>
<h3 id="安装-python-3"><a href="#安装-python-3" class="headerlink" title="安装 python 3"></a>安装 python 3</h3><ul>
<li>检查系统自带的版本:</li>
</ul>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sys
<span class="token keyword">print</span><span class="token punctuation">(</span>sys<span class="token punctuation">.</span>version<span class="token punctuation">)</span>
!<span class="token punctuation">&#123;</span>sys<span class="token punctuation">.</span>executable<span class="token punctuation">&#125;</span> <span class="token operator">-</span><span class="token operator">-</span>version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre><code>3.10.5 | packaged by conda-forge | (main, Jun 14 2022, 07:04:59) [GCC 10.3.0]
Python 3.10.5
</code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
python --version
python3 --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre><code>Python 3.10.5
Python 3.10.5
</code></pre>
<h3 id="pip"><a href="#pip" class="headerlink" title="pip"></a>pip</h3><h4 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h4><p>检查 pip 是否安装以及版本</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
pip --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>pip 22.1.2 from /home/lydia/miniconda3/lib/python3.10/site-packages/pip (python 3.10)
</code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
python -m pip --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>pip 22.1.2 from /home/lydia/miniconda3/lib/python3.10/site-packages/pip (python 3.10)
</code></pre>
<p>安装 (Ubuntu):</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> python3-pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="用-pip-安装-python-包"><a href="#用-pip-安装-python-包" class="headerlink" title="用 pip 安装 python 包"></a>用 pip 安装 python 包</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token operator">&lt;</span>package<span class="token operator">></span>
pip <span class="token function">install</span> --upgrade <span class="token operator">&lt;</span>package<span class="token operator">></span>
pip uninstall <span class="token operator">&lt;</span>package<span class="token operator">></span>
pip list
pip list --outdated
pip show <span class="token operator">&lt;</span>package<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>安装到根目录 (不推荐!)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> -H pip <span class="token function">install</span> <span class="token operator">&lt;</span>package<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>[选项]</p>
<table>
<thead>
<tr>
<th align="left"></th>
<th align="left"></th>
</tr>
</thead>
<tbody><tr>
<td align="left">-U, –upgrade</td>
<td align="left">升级, 配合 install 使用</td>
</tr>
<tr>
<td align="left">–force-reinstall</td>
<td align="left">强制重新安装依赖</td>
</tr>
<tr>
<td align="left">-I, –ignore-installed</td>
<td align="left">强制安装(无论是否已安装)</td>
</tr>
<tr>
<td align="left">–no-cache-dir</td>
<td align="left">不生成cache</td>
</tr>
<tr>
<td align="left">-i <font color=blue><em>url</em></font></td>
<td align="left">使用指定源(更改配置见 <a href="#pip-%E9%95%9C%E5%83%8F%E6%BA%90">pip 镜像源</a>)</td>
</tr>
<tr>
<td align="left"><font color=blue><em>package</em></font>&#x3D;&#x3D;x.x.x</td>
<td align="left">指定版本, 错误版本号(或为空)将返回可用版本号</td>
</tr>
<tr>
<td align="left">“<font color=blue><em>package</em></font>&lt;x.x.x”</td>
<td align="left">指定小于某版本的最新版本, 必须有引号</td>
</tr>
</tbody></table>
<p>检查包(尝试导入, 查看包版本):</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python -c <span class="token string">"import &lt;package>"</span>
python -c <span class="token string">"import &lt;package>; print(&lt;package>.__version__)"</span>  <span class="token comment"># 版本号</span>
python -c <span class="token string">"import &lt;package>; print(&lt;package>.version)"</span>  <span class="token comment"># 安装位置</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h4 id="使-pip-安装-python-包到用户路径"><a href="#使-pip-安装-python-包到用户路径" class="headerlink" title="使 pip 安装 python 包到用户路径"></a>使 pip 安装 python 包到用户路径</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
python -m site <span class="token operator">|</span> <span class="token function">grep</span> <span class="token string">'USER_SITE'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>USER_SITE: &#39;/home/lydia/.local/lib/python3.10/site-packages&#39; (doesn&#39;t exist)
ENABLE_USER_SITE: True
</code></pre>
<ul>
<li>确认已创建用户包安装路径.<br></li>
<li>在 <code>~/.bashrc</code> 中设置 <code>PATH</code> 变量:</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/.local/bin:<span class="token environment constant">$PATH</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>使用 <code>install</code> 或 <code>list</code> 时加上选项 <font color=red>–user</font> (注意: <code>uninstall</code> 不用)</li>
</ul>
<blockquote>
<p><font color=#b32425><em>使用 Anaconda 路径下的 pip 时不需要这个选项</em></font></p>
</blockquote>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> --user <span class="token operator">&lt;</span>pkg_name<span class="token operator">></span>
pip list --user
pip list --outdated --user<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h3><h4 id="安装-Anaconda-或-Miniconda-推荐"><a href="#安装-Anaconda-或-Miniconda-推荐" class="headerlink" title="安装 Anaconda 或 Miniconda (推荐)"></a>安装 Anaconda 或 Miniconda (推荐)</h4><ul>
<li><p>安装 miniconda 64位 (默认安装到 <font color=blue>~&#x2F;miniconda3&#x2F;</font>)</p>
<p>下载 <a href="https://conda.io/miniconda.html">https://conda.io/miniconda.html</a></p>
</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">bash</span> Miniconda3-latest-Linux-x86_64.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>在 <code>~/.bashrc</code> 加入如下语句:</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/miniconda3/bin:<span class="token environment constant">$PATH</span>
<span class="token builtin class-name">.</span> <span class="token environment constant">$HOME</span>/miniconda3/etc/profile.d/conda.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>&amp;ensp;完成后执行:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">source</span> ~/.bashrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>安装好后先更新 conda 和 pip:</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda update conda pip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>帮助</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token punctuation">[</span>cmd<span class="token punctuation">]</span> --help<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>miniconda 下载 <a href="https://conda.io/miniconda.html">https://conda.io/miniconda.html</a><br><br>安装参考 <a href="https://conda.io/docs/user-guide/install/index.html">https://conda.io/docs/user-guide/install/index.html</a></p>
<h4 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h4><p>默认环境为 base<br><br><code>-n, --name &lt;env_name&gt;</code> 指定环境</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda create --name <span class="token operator">&lt;</span>env_name<span class="token operator">></span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>packages<span class="token operator">></span><span class="token punctuation">]</span> <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.6</span>
conda create --name <span class="token operator">&lt;</span>env_name<span class="token operator">></span> --clone base

<span class="token comment"># e.g.</span>
conda create --name intel intelpython3_core <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 删除环境</span>
conda-env remove --name <span class="token operator">&lt;</span>env_name<span class="token operator">></span>
*
<span class="token comment"># 列出信息</span>
conda info -e/--envs
conda-env list

<span class="token comment"># 进入环境</span>
<span class="token builtin class-name">source</span> activate <span class="token operator">&lt;</span>env_name<span class="token operator">></span>
conda activate <span class="token operator">&lt;</span>env_name<span class="token operator">></span>

<span class="token comment"># 离开环境</span>
<span class="token builtin class-name">source</span> deactivate
conda deactivate

<span class="token comment"># 在某环境中执行操作</span>
conda <span class="token operator">&lt;</span>commands<span class="token operator">></span> --name <span class="token operator">&lt;</span>env_name<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h4 id="使用-conda-命令"><a href="#使用-conda-命令" class="headerlink" title="使用 conda 命令"></a>使用 conda 命令</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda info
conda list <span class="token punctuation">[</span><span class="token operator">&lt;</span>packages<span class="token operator">></span><span class="token punctuation">]</span>
conda search <span class="token operator">&lt;</span>package<span class="token operator">></span>
conda search <span class="token operator">&lt;</span>package<span class="token operator">></span> --info
conda <span class="token function">install</span> <span class="token operator">&lt;</span>packages<span class="token operator">></span>
conda update/upgrade <span class="token operator">&lt;</span>packages<span class="token operator">></span>
conda remove/uninstall <span class="token operator">&lt;</span>packages<span class="token operator">></span>
conda clean --all<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>
<p>见 <code>conda --help</code> 或 <code>conda cmd --help</code>, <code>conda search</code> 语法见 <a href="https://github.com/conda/conda/blob/master/conda/models/match_spec.py">https://github.com/conda/conda/blob/master/conda/models/match_spec.py</a></p>
<p>配置:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># 安装确认时显示源的 url, 默认已开启</span>
conda config --set show_channel_urls True

<span class="token comment"># 禁止每次更新自动检查 conda 的更新, 默认True</span>
conda config --set auto_update_conda False

<span class="token comment"># 禁止源优先而使用版本优先, 默认True</span>
conda config --set channel_priority False

<span class="token comment"># 增加设置, 例如增加源(可使用 url 或别名)</span>
conda config --add channels <span class="token operator">&lt;</span>channel<span class="token operator">></span>

<span class="token comment"># 删除某项设置的所有值, 例如删除所有自定义源</span>
conda config --remove-key channels

<span class="token comment"># 删除某项设置的某个值, 例如删除某个源</span>
conda config --remove channels <span class="token operator">&lt;</span>channel<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>用户配置文件 <code>~/.condarc</code> (见 <a href="#conda-%E9%95%9C%E5%83%8F%E6%BA%90">conda 镜像源</a>)<br><br>参考链接 <a href="https://conda.io/docs/user-guide/configuration/use-condarc.html">https://conda.io/docs/user-guide/configuration/use-condarc.html</a></p>
<p>也可以在不同的环境用不同的配置文件: <code>~/miniconda3/envs/&lt;env_name&gt;/.condarc</code></p>
<h3 id="镜像源"><a href="#镜像源" class="headerlink" title="镜像源"></a>镜像源</h3><h4 id="pip-镜像源"><a href="#pip-镜像源" class="headerlink" title="pip 镜像源"></a>pip 镜像源</h4><p>用户配置文件:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
<span class="token function">cat</span> ~/.pip/pip.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>[global]
index-url = [https://pypi.douban.com/simple](https://pypi.douban.com/simple)
trusted-host = pypi.doubanio.com
</code></pre>
<h4 id="conda-镜像源"><a href="#conda-镜像源" class="headerlink" title="conda 镜像源"></a>conda 镜像源</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config --add/--prepend channels <span class="token operator">&lt;</span>new_channel<span class="token operator">></span>
conda config --append channels <span class="token operator">&lt;</span>new_channel<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>清华源:<br><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</a><br><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</a><br><br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</a><br></p>
<p>channels 的默认的优先级为: 前排优先<br><br>镜像源中 <code>pkgs/main</code> 通常比 <code>pkgs/free</code> 新, 因此将其放在最前.<br><br>或使用 <code>channel_priority: false</code>, 见上一节 <a href="#%E4%BD%BF%E7%94%A8-conda-%E5%91%BD%E4%BB%A4">conda 设置</a>.</p>
<p>e.g.</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda config --add channels <span class="token punctuation">[</span>https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<span class="token punctuation">]</span><span class="token punctuation">(</span>https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>此时 <code>~/.condarc</code> 的内容:</p>
<blockquote>
<p>channels:<br><br>&amp;emsp;- <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/">https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/</a><br><br>&amp;emsp;- defaults</p>
</blockquote>
<h3 id="Troubleshooting"><a href="#Troubleshooting" class="headerlink" title="Troubleshooting"></a>Troubleshooting</h3><h4 id="conda-安装时指定源且禁用其他源"><a href="#conda-安装时指定源且禁用其他源" class="headerlink" title="conda 安装时指定源且禁用其他源"></a>conda 安装时指定源且禁用其他源</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> <span class="token operator">&lt;</span>packages<span class="token operator">></span> -c <span class="token operator">&lt;</span>channel<span class="token operator">></span> --override-channels<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h4 id="Astropy-新版不再支持旧版-Python"><a href="#Astropy-新版不再支持旧版-Python" class="headerlink" title="Astropy 新版不再支持旧版 Python"></a>Astropy 新版不再支持旧版 Python</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> <span class="token string">"astropy&lt;3.0"</span> <span class="token comment"># for python &lt; 3.5</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<h2 id="安装常用包"><a href="#安装常用包" class="headerlink" title="安装常用包"></a>安装常用包</h2><hr>
<h3 id="numpy-scipy-matplotlib"><a href="#numpy-scipy-matplotlib" class="headerlink" title="numpy, scipy, matplotlib"></a>numpy, scipy, matplotlib</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> numpy
conda <span class="token function">install</span> scipy
conda <span class="token function">install</span> matplotlib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> numpy
pip <span class="token function">install</span> scipy
pip <span class="token function">install</span> matplotlib<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>配置启动文件(Ubuntu), 在 <code>~/.bashrc</code> 中添加:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">export</span> <span class="token assign-left variable">PYTHONSTARTUP</span><span class="token operator">=</span><span class="token environment constant">$HOME</span>/.pythonrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python">cat <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>pythonrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre><code># Python startup file
# ~/.pythonrc
import matplotlib.pyplot as plt
from matplotlib import cm
import numpy as np
import os

print(&quot;&gt;&gt;&gt; import matplotlib.pyplot as plt&quot;)
print(&quot;&gt;&gt;&gt; from matplotlib import cm&quot;)
print(&quot;&gt;&gt;&gt; import numpy as np&quot;)
print(&quot;&gt;&gt;&gt; import os&quot;)

try:
    from pprint import pprint
except ImportError:
    pass
else:
    print(&quot;&gt;&gt;&gt; from pprint import pprint&quot;)

# Tab completion &amp; history
try:
    import atexit, readline, rlcompleter
except ImportError:
    pass
else:
    readline.parse_and_bind(&#39;tab: complete&#39;) # Tab completion
    readline.parse_and_bind(&#39;&#39;&#39;control-l:&quot;    &quot;&#39;&#39;&#39;) # Indent, since TAB is occupied
    histfile = os.path.join(os.environ[&#39;HOME&#39;], &#39;.pyhistory&#39;) # History file
    try:
        readline.read_history_file(histfile)
    except IOError:
        pass
    atexit.register(readline.write_history_file, histfile)
    del histfile, readline, rlcompleter
    print(&quot;--- Tab completion: [ON] ---&quot;)
    print(&quot;--- History: [ON] ---&quot;)
    print(&quot;--- [Tab] -&gt; [Ctrl+L] ---&quot;)
</code></pre>
<h3 id="Astropy-SunPy"><a href="#Astropy-SunPy" class="headerlink" title="Astropy, SunPy"></a>Astropy, SunPy</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> astropy
conda <span class="token function">install</span> sunpy -c conda-forge<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> astropy
pip <span class="token function">install</span> sunpy<span class="token punctuation">[</span>all<span class="token punctuation">]</span> pytest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>测试:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> astropy
<span class="token operator">>></span><span class="token operator">></span> astropy<span class="token punctuation">.</span>test<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> sunpy
<span class="token operator">>></span><span class="token operator">></span> sunpy<span class="token punctuation">.</span>self_test<span class="token punctuation">(</span>online<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>如果出错: ‘$USER’权限问题, 见下面修改 <code>~/.sunpy/sunpyrc</code> 说明.</p>
<p>查看包信息:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
conda search <span class="token string">"conda-forge::sunpy>=4.0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>Loading channels: ...working... done
# Name                       Version           Build  Channel             
sunpy                          4.0.0 py310hde88566_0  conda-forge         
sunpy                          4.0.0  py38h71d37f0_0  conda-forge         
sunpy                          4.0.0  py39hd257fcd_0  conda-forge         
sunpy                          4.0.1 py310hde88566_0  conda-forge         
sunpy                          4.0.1  py38h71d37f0_0  conda-forge         
sunpy                          4.0.1  py39hd257fcd_0  conda-forge         
sunpy                          4.0.2 py310hde88566_0  conda-forge         
sunpy                          4.0.2  py38h71d37f0_0  conda-forge         
sunpy                          4.0.2  py39hd257fcd_0  conda-forge         
sunpy                          4.0.3 py310hde88566_0  conda-forge         
sunpy                          4.0.3  py38h71d37f0_0  conda-forge         
sunpy                          4.0.3  py39hd257fcd_0  conda-forge         
</code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
conda search <span class="token string">"sunpy 4.0.3 py310hde88566_0"</span> --info<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>Loading channels: ...working... done
sunpy 4.0.3 py310hde88566_0
---------------------------
file name   : sunpy-4.0.3-py310hde88566_0.tar.bz2
name        : sunpy
version     : 4.0.3
build       : py310hde88566_0
build number: 0
size        : 5.7 MB
license     : BSD-2-Clause
subdir      : linux-64
url         : [https://conda.anaconda.org/conda-forge/linux-64/sunpy-4.0.3-py310hde88566_0.tar.bz2](https://conda.anaconda.org/conda-forge/linux-64/sunpy-4.0.3-py310hde88566_0.tar.bz2)
md5         : 5831b8fde0edd2aa0ff9f42b237b7ba2
timestamp   : 2022-07-08 16:21:32 UTC
dependencies: 
  - asdf &gt;=2.8.0
  - asdf-astropy &gt;=0.1.1
  - astropy &gt;=4.1.0
  - beautifulsoup4 &gt;=4.8.0
  - cdflib &gt;=0.3.19,!=0.4.0
  - drms &gt;=0.6.1
  - glymur &gt;=0.8.18,!=0.9.0,!=0.9.5
  - h5netcdf &gt;=0.8.1
  - h5py &gt;=3.1.0
  - libgcc-ng &gt;=12
  - matplotlib-base &gt;=3.2.0
  - mpl_animators &gt;=1.0.0
  - numpy &gt;=1.21.6,&lt;2.0a0
  - pandas &gt;=1.0.0
  - parfive &gt;=1.2.0
  - python &gt;=3.10,&lt;3.11.0a0
  - python-dateutil &gt;=2.8.0
  - python_abi 3.10.* *_cp310
  - reproject
  - scikit-image &gt;=0.16.0
  - scipy &gt;=1.3.0
  - setuptools
  - sqlalchemy &gt;=1.3.4
  - tqdm &gt;=4.32.1
  - zeep &gt;=3.4.0
</code></pre>
<p>用户文件位置: <code>~/.sunpy/sunpyrc</code></p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python">cat <span class="token operator">~</span><span class="token operator">/</span><span class="token punctuation">.</span>sunpy<span class="token operator">/</span>sunpyrc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre><code>[general]
time_format = %Y-%m-%d %H:%M:%S
working_dir = /home/lydia/sunpy-downloads

[downloads]
download_dir = /home/lydia/sunpy-downloads/data
sample_dir = /home/lydia/sunpy-downloads/data/sample_data

[database]
url = sqlite:////home/lydia/sunpy-downloads/sunpydb.sqlite
</code></pre>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> sunpy
sunpy<span class="token punctuation">.</span>util<span class="token punctuation">.</span>system_info<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>==============================
sunpy Installation Information
==============================

General
#######
OS: Ubuntu (18.04, Linux 4.19.128-microsoft-standard)
Arch: 64bit, (x86_64)
sunpy: 4.0.3
Installation path: /home/lydia/miniconda3/lib/python3.10/site-packages/sunpy-4.0.3.dist-info

Required Dependencies
#####################
astropy: 5.1
numpy: 1.23.1
packaging: 21.3
parfive: 1.5.1

Optional Dependencies
#####################
asdf: 2.12.0
asdf-astropy: 0.2.1
beautifulsoup4: 4.11.1
cdflib: 0.4.4
dask: 2022.7.0
drms: 0.6.2
glymur: 0.10.1
h5netcdf: 0.0.0
h5py: 3.7.0
matplotlib: 3.5.2
mpl-animators: 1.0.1
pandas: 1.4.1
python-dateutil: 2.8.2
reproject: 0.8
scikit-image: 0.19.3
scipy: 1.8.1
sqlalchemy: 1.4.39
tqdm: 4.64.0
zeep: 4.1.0
</code></pre>
<p>设置下载位置:<br><br>(参考 <a href="http://docs.sunpy.org/en/stable/guide/customization.html?highlight=sunpy.config.set">http://docs.sunpy.org/en/stable/guide/customization.html?highlight=sunpy.config.set)</a>)</p>
<p>e.g.</p>
<blockquote>
<p>[downloads]<br><br>&amp;emsp;download_dir &#x3D; …</p>
</blockquote>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> sunpy
<span class="token operator">>></span><span class="token operator">></span> sunpy<span class="token punctuation">.</span>config<span class="token punctuation">.</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token string">'downloads'</span><span class="token punctuation">,</span> <span class="token string">'download_dir'</span><span class="token punctuation">,</span>
                 <span class="token string">'/home/&lt;user>/&lt;your_path>/sunpy-downloads/data'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>退出后再进入 python 如果发现没有修改成功, 则需要手动修改 ~&#x2F;.sunpy&#x2F;sunpyrc 文件.<br><br>不能用 ‘$USER’ 代替具体的用户名 ‘&lt;user&gt;‘</p>
<h3 id="Jupyter"><a href="#Jupyter" class="headerlink" title="Jupyter"></a>Jupyter</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> jupyter -c conda-forge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> jupyter<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">%%bash
jupyter --path<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<pre><code>config:
    /home/lydia/.jupyter
    /home/lydia/.local/etc/jupyter
    /home/lydia/miniconda3/etc/jupyter
    /usr/local/etc/jupyter
    /etc/jupyter
data:
    /home/lydia/.local/share/jupyter
    /home/lydia/miniconda3/share/jupyter
    /usr/local/share/jupyter
    /usr/share/jupyter
runtime:
    /home/lydia/.local/share/jupyter/runtime
</code></pre>
<ul>
<li>设置双击打开 *.ipynb 文件</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> nbopen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<p>再执行:</p>
<p>Linux&#x2F;BSD: <br></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">python3 -m nbopen.install_xdg<span class="token operator">&lt;</span>br<span class="token operator">></span>
 ``<span class="token variable"><span class="token variable">`</span>   

Windows: <span class="token operator">&lt;</span>br<span class="token operator">></span>
<span class="token variable">`</span></span>``bash
python3 -m nbopen.install_win<span class="token operator">&lt;</span>br<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>Mac: <br><br>&amp;ensp;Clone the repository (<a href="https://github.com/takluyver/nbopen.git">https://github.com/takluyver/nbopen.git</a>)<br><br>&amp;ensp;and run <code>./osx-install.sh</code><br><br><br>之后即可在文件浏览器中选择文件的打开方式为 <code>Jupyter Notebook</code>.</p>
<blockquote>
<p>注意可能会更改 bash 脚本的默认打开方式.</p>
</blockquote>
<ul>
<li>Jupyter 插件集合<br>(<a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions">https://github.com/ipython-contrib/jupyter_contrib_nbextensions</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> jupyter_contrib_nbextensions -c conda-forge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> jupyter_contrib_nbextensions<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<blockquote>
<p>This also automatically installs the Javascript and CSS files:<br><br><code>jupyter contrib nbextension install --sys-prefix</code></p>
</blockquote>
<p>安装好后将同时启用 <code>Nbextensions</code> 选项卡, 手动选择需要的插件,<br>或者在命令行启用和禁用:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">jupyter nbextension list <span class="token comment"># 查看</span>
jupyter nbextension <span class="token builtin class-name">enable</span> <span class="token operator">&lt;</span>path<span class="token operator">></span> <span class="token comment"># &lt;path> 为上述 list 中的 &lt;extension>/main</span>
jupyter nbextension disable <span class="token operator">&lt;</span>path<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>注意用如果 jupyter 安装在 conda 路径, 手动安装插件 (<code>jupyter nbextension install</code>) 时需要指定 <font color=red>–sys-prefix</font></p>
<ul>
<li>notebook 主题 (<a href="https://github.com/dunovank/jupyter-themes">https://github.com/dunovank/jupyter-themes</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> jupyterthemes<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>演示代码过程的插件 (<a href="https://github.com/lgpage/nbtutor">https://github.com/lgpage/nbtutor</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> nbtutor -c conda-forge<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> nbtutor
jupyter nbextension <span class="token function">install</span> --overwrite --py nbtutor
jupyter nbextension <span class="token builtin class-name">enable</span> --py nbtutor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>载入:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ipython/jupyter</span>
<span class="token operator">%</span>load_ext nbtutor<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
<p>使用:<br><br>CodeCell 中首行加入下面语句, 然后执行 Cell (numpy 等需要在 Cell 内导入)</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ipython/jupyter</span>
<span class="token operator">%</span><span class="token operator">%</span>nbtutor <span class="token operator">-</span>r <span class="token operator">-</span>f
<span class="token comment"># 或</span>
<span class="token operator">%</span><span class="token operator">%</span>nbtutor <span class="token operator">-</span>r <span class="token operator">-</span>f <span class="token operator">-</span>i  <span class="token comment"># 缩减显示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><ul>
<li>PeakUtils (<a href="http://peakutils.readthedocs.io/en/latest/">http://peakutils.readthedocs.io/en/latest/</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">git</span> clone <span class="token punctuation">[</span>https://bitbucket.org/lucashnegri/peakutils.git<span class="token punctuation">]</span><span class="token punctuation">(</span>https://bitbucket.org/lucashnegri/peakutils.git<span class="token punctuation">)</span>
<span class="token builtin class-name">cd</span> peakutils
python setup.py <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> peakutils<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>LMfit-py (<a href="https://github.com/lmfit/lmfit-py">https://github.com/lmfit/lmfit-py</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> lmfit -c conda-forge
<span class="token comment"># 或</span>
pip <span class="token function">install</span> lmfit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> lmfit<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>HDF5包 (<a href="http://docs.h5py.org/en/latest/index.html">http://docs.h5py.org/en/latest/index.html</a>)<br></li>
</ul>
<p><strong>pandas</strong></p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> pytables pandas<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> tables pandas<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p><br><br><br><strong>h5py</strong> (<a href="http://docs.h5py.org/en/latest/index.html">http://docs.h5py.org/en/latest/index.html</a>)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">conda <span class="token function">install</span> h5py  <span class="token comment"># 推荐. 将同时安装 hdf5, 并得到 h5dump 等命令</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<p>&amp;ensp;Or</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> h5py  <span class="token comment"># 需要 sudo apt-get install libhdf5-dev</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>CDF包<br></li>
</ul>
<p>安装 spacepy (<a href="https://pythonhosted.org/SpacePy">https://pythonhosted.org/SpacePy</a>)</p>
<p>或</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> cdflib <span class="token comment"># [https://github.com/MAVENSDC/cdflib](https://github.com/MAVENSDC/cdflib)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>EVTK (<a href="https://bitbucket.org/pauloh/pyevtk">https://bitbucket.org/pauloh/pyevtk</a>)</li>
</ul>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> mercurial  <span class="token comment"># 得到 hg 命令</span>

<span class="token function">hg</span> clone <span class="token punctuation">[</span>https://bitbucket.org/pauloh/pyevtk<span class="token punctuation">]</span><span class="token punctuation">(</span>https://bitbucket.org/pauloh/pyevtk<span class="token punctuation">)</span>
<span class="token builtin class-name">cd</span> pyevtk
python setup.py build --debug <span class="token function">install</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">hg</span> pull <span class="token operator">&amp;&amp;</span> <span class="token function">hg</span> update default <span class="token comment"># 更新</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">from</span> evtk<span class="token punctuation">.</span>hl <span class="token keyword">import</span> gridToVTK<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>

<ul>
<li>Mayavi (<a href="http://docs.enthought.com/mayavi/mayavi">http://docs.enthought.com/mayavi/mayavi</a>)</li>
</ul>
<p>&amp;emsp;需要先安装 cython (conda 或 pip)</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">pip <span class="token function">install</span> mayavi  <span class="token comment"># 将同时安装 vtk. (pip 是目前 mayavi 最保险的安装方式)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># shell</span>
mayavi2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>conda</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 的脚本与交互式环境</title>
    <url>/2018/scripts-and-interactive-mode/</url>
    <content><![CDATA[<p>目的是从交互环境调用脚本产生的变量, 可用于调试脚本和测试数据等等.</p>
<span id="more"></span>

<p>比如当前目录下有一个包含如下内容的脚本:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#!/usr/bin/env python</span>
a<span class="token operator">=</span><span class="token number">1</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'a ='</span><span class="token punctuation">,</span> a<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<h3 id="方法-1-shell-gt-interactive-mode-推荐"><a href="#方法-1-shell-gt-interactive-mode-推荐" class="headerlink" title="方法 1. shell -&gt; interactive mode (推荐)"></a>方法 1. shell -&gt; interactive mode (推荐)</h3><p>使用 <code>-i</code> 选项:</p>
<pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token comment"># shell</span>
$ python -i test.py<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>

<p>执行结束随即进入 python 交互环境, 并且保留了脚本中定义的变量:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># python</span>
a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token operator">>></span><span class="token operator">></span> a
<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="方法-2-In-ipython-x2F-jupyter-第二推荐"><a href="#方法-2-In-ipython-x2F-jupyter-第二推荐" class="headerlink" title="方法 2. In ipython &#x2F; jupyter (第二推荐)"></a>方法 2. In ipython &#x2F; jupyter (第二推荐)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># ipython</span>
In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">%</span>run test<span class="token punctuation">.</span>py
a <span class="token operator">=</span> <span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> a
Out<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token number">1</span>

In <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">%</span>who
a

In <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token operator">%</span>whos
Variable   Type    Data<span class="token operator">/</span>Info
<span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span><span class="token operator">-</span>
a          <span class="token builtin">int</span>     <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<h3 id="方法-3-In-interactive-mode"><a href="#方法-3-In-interactive-mode" class="headerlink" title="方法 3. In interactive mode"></a>方法 3. In interactive mode</h3><blockquote>
<p><strong>NOTE</strong>: Python 3 取消了 <code>execfile()</code> 这个函数! 如今使用 <code>exec()</code>.</p>
</blockquote>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># python</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">exec</span><span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'test.py'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
a <span class="token operator">=</span> <span class="token number">1</span>
<span class="token operator">>></span><span class="token operator">></span> a
<span class="token number">1</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token string">'a'</span> <span class="token keyword">in</span> <span class="token builtin">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token boolean">True</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token string">'a'</span><span class="token punctuation">]</span>  <span class="token comment"># same as vars()['a']</span>
<span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>但这之后文件并没有关闭, 虽然多数时候没有影响, 但如果实在要关闭, 建议使用 <code>with</code> :</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># python</span>
<span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'test.py'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
    <span class="token keyword">exec</span><span class="token punctuation">(</span>f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># ctrl+D to exit the block</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<p>总之十分不方便, 因此不推荐.<br><br><br><br>对于没有使用 <code>if __name__ == &quot;__main__&quot;</code> 的脚本, 当脚本处在当前目录或 <code>$PYTHONPATH</code> 中时, 也可以有比较方便的办法<br>(<br>注意这里因为是调用 module 的形式, 所以不要加 ‘.py’ ):</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># python</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> test
a <span class="token operator">=</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>

<br>
补充说明在 python 交互环境中查看当前环境中的变量的方法 (ipython / jupyter 使用 `%who`, `%whos` 即可):

<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">dir</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># without an argument, return the names in the current scope</span>
<span class="token builtin">globals</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># a dictionary containing the current scope's global variables</span>
<span class="token builtin">locals</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># a dictionary containing the current scope's local variables</span>
<span class="token builtin">vars</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># without arguments, equivalent to locals();</span>
        <span class="token comment"># with an argument, equivalent to object.__dict__.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas sep=&#39;\s+&#39; 的问题</title>
    <url>/2018/pandas-sep/</url>
    <content><![CDATA[<p>Pandas 的 <code>read_table</code>(<a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_table.html">官方文档</a>)<br>和 <code>read_csv</code>(<a href="https://pandas.pydata.org/pandas-docs/stable/generated/pandas.read_csv.html">官方文档</a>)<br>(指定分隔符的情况下两者无区别),<br>有关键字 <code>sep=</code> (<code>read_table</code> 默认为 <code>sep=&#39;\t&#39;</code>, <code>read_csv</code> 默认为 <code>sep=&#39;,&#39;</code>).</p>
<p>但当需要指定多个空格的情况下, 指定 <code>sep=&#39;\s+&#39;</code> 可能无法被正确识别.</p>
<span id="more"></span>

<p>请使用 <strong><code>&#39; +&#39;</code></strong> 代替.</p>
<p>官方文档中关于 <code>sep</code> 关键字的说明有如下描述:</p>
<blockquote>
<p>In addition, separators longer than 1 character and<br><strong>different from <code>&#39;\s+&#39;</code></strong> will be interpreted as regular expressions and<br>will also force the use of the Python parsing engine.</p>
</blockquote>
<p>指定 <code>sep=&#39;\s+&#39;</code> 可能无法被正确识别, </p>
<p>暂时的办法是:<br><br>加上参数 <code>engine=&#39;python&#39;</code>, 或使用 <strong><code>&#39; +&#39;</code></strong> 代替 (此时 <code>engine=&#39;python&#39;</code>).<br><br>如果设为 <code>engine=&#39;c&#39;</code>, 速度较快, 但不便识别正则表达, 追求效率的话可以配合使用:<br><br><code>quoting=3</code> (即使用 <code>csv.QUOTE_NONE</code>)</p>
<hr>
<!-- Pandas 的读取方法简单介绍参见:
[用 pandas 读 csv](/advance.html#91-用-pandas-读-csv) -->]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>使用 pickle 模块存取 dict</title>
    <url>/2018/pickle/</url>
    <content><![CDATA[<p>Python 自带一个存取 dict 到二进制文件的工具 <a href="https://docs.python.org/3/library/pickle.html">pickle</a>, 支持数值型的 key (<a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez.html">numpy.savez</a> 和 <a href="https://docs.scipy.org/doc/numpy/reference/generated/numpy.savez_compressed.html">numpy.savez_compressed</a> 只支持字符串作为 key).</p>
<span id="more"></span>

<p>用法:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> pickle
<span class="token comment"># 存入</span>
pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"filename.p"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># type(data): dict</span>
<span class="token comment"># 读取</span>
data <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"filename.p"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 返回一个 dict</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>以下示例特地使用了数值型的 key:</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pickle
<span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1.1</span><span class="token punctuation">:</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">&#125;</span>  <span class="token comment"># 以 float 和 int 作为 key</span>
<span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> pickle
<span class="token operator">>></span><span class="token operator">></span> pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"data.p"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 并不会自动添加后缀名</span>
<span class="token operator">>></span><span class="token operator">></span> b <span class="token operator">=</span> pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"data.p"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">.</span>keys<span class="token punctuation">(</span><span class="token punctuation">)</span>
dict_keys<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token operator">>></span><span class="token operator">></span> b<span class="token punctuation">[</span><span class="token number">1.1</span><span class="token punctuation">]</span>
<span class="token number">1.1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>

<p>注意 <code>pickle.load()</code> 返回的类型是 dict, 但 <code>numpy.load()</code> 读取 ‘*.npz’ 文件所返回是一个可以像 dict 一样使用 key 来索引数据的 <code>numpy.lib.npyio.NpzFile</code> 对象.</p>
<p>‘*.p’ 文件的大小和非压缩的 ‘*.npz’ (<code>numpy.savez()</code>) 一致, 然而压缩过的 ‘*.npz’ (<code>numpy.savez_compressed()</code>) 显然占用空间更小, 因此在方便的情况下 (例如 key 是字符串, 读取后直接操作数据而不需要得到一个 dict), 推荐优先使用 numpy.<br><br><br><br>如果要存入上述示例中同样的数据到 ‘*.npz’ 格式, 需要转换 key 的类型 (读取时也需要使用字符串型的 key):</p>
<pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> a <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token builtin">str</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>value <span class="token keyword">for</span> key<span class="token punctuation">,</span> value <span class="token keyword">in</span> a<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>
<span class="token operator">>></span><span class="token operator">></span> a
<span class="token punctuation">&#123;</span><span class="token string">'1.1'</span><span class="token punctuation">:</span> <span class="token number">1.1</span><span class="token punctuation">,</span> <span class="token string">'2'</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">&#125;</span>
<span class="token operator">>></span><span class="token operator">></span> np<span class="token punctuation">.</span>savez_compressed<span class="token punctuation">(</span><span class="token string">'data2'</span><span class="token punctuation">,</span> <span class="token operator">**</span>a<span class="token punctuation">)</span>  <span class="token comment"># 会自动添加后缀名, 得到 'data2.npz'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>

<!-- ---

其他数据存取教程:

- [Python 简易教程 (for Solar Group)](/main.html#4-常见数据文件读写)
<ul>
<li><p>[4.1. 一般情况](&#x2F;main.html#41-一般情况)</p>
</li>
<li><p>[4.2. txt, csv 文件读写](&#x2F;main.html#42-txt-csv-文件读写)</p>
</li>
<li><p>[4.3. numpy save 文件读写](&#x2F;main.html#43-numpy-save-文件读写)</p>
</li>
<li><p>[4.4. IDL sav 文件读取](&#x2F;main.html#44-idl-sav-文件读取)</p>
</li>
<li><p>[4.5. FITS 文件读取](&#x2F;main.html#45-fits-文件读取)</p>
</li>
<li><p>[Python 进阶 (for Solar Group)](&#x2F;advance.html#9-其他格式文件读写)</p>
<ul>
<li>[9.1. 用 pandas 读 csv](&#x2F;advance.html#91-用-pandas-读-csv)</li>
<li>[9.2. Fortran 二进制文件读写](&#x2F;advance.html#92-fortran-二进制文件读写)</li>
<li>[9.3. HDF5 文件读写, NCDF, CDF 文件读取](&#x2F;advance.html#93-hdf5-文件读写  -ncdf-cdf-文件读取)</li>
<li>[9.4. NumPy to VTK](&#x2F;advance.html#94-numpy-to-vtk)</li>
<li>[9.5. Matlab mat 文件读写](&#x2F;advance.html#95-matlab-mat-文件读写) –&gt;</li>
</ul>
</li>
</ul>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
